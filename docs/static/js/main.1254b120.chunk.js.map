{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","placeholder","onChange","target","GiftGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+KAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEjCC,EAFiC,KAErBC,EAFqB,KAezC,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,YAAY,0BACZC,SAjBoB,SAACR,GAAD,OAAOF,EAAcE,EAAES,OAAOH,a,QCK3CI,G,KATM,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAC7B,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,S,uBCNEK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DACN,mCACD,GAGRN,EALe,qDAEP,GAFO,oBACN,mCADM,cAKkEO,UAAUF,IAL5E,SAOFG,MAAOR,GAPL,cAOfS,EAPe,gBAQEA,EAAKC,OARP,uBAQbC,EARa,EAQbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAdjB,kBAkBdY,GAlBc,4CAAH,sDC2BLM,EAxBE,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECAP,SAAEA,GAAe,IAAD,EAEhBrB,mBAAS,CACjC2B,KAAM,GACNQ,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAkB1C,OAVAC,qBAAU,WAERlB,EAASC,GACNkB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACrBV,KAAMa,EACNL,SAAS,SAGZ,CAAEd,IAEEe,EDhB2BK,CAAcpB,GAAlCW,EAFmB,EAEzBL,KAAcQ,EAFW,EAEXA,QAEtB,OACE,qCACE,oBAAIlB,UAAU,oCAAd,SAAoDI,IAElDc,GAAW,mBAAGlB,UAAU,mCAAb,sBAEb,qBAAKA,UAAU,8CAAf,SAEIe,EAAOH,KAAK,SAAEC,GAAF,OACT,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEOTW,EArBO,WAAO,IAAD,EAEU1C,mBAAS,CAAC,aAFpB,mBAEnB2C,EAFmB,KAEP5C,EAFO,KAI1B,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEI4C,EAAWd,KAAI,SAAAR,GAAQ,OACrB,cAAC,EAAD,CAA2BA,SAAWA,GAAtBA,YCZ5BuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.1254b120.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [ inputValue, setInputValue ] = useState('')\r\n\r\n  const handleInputChange = (e) => setInputValue(e.target.value)\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if( inputValue.trim().length > 2 ) {\r\n      setCategories( cats => [inputValue, ...cats])\r\n      setInputValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input\r\n        type='text'\r\n        value={ inputValue }\r\n        placeholder='Busca cualquier cosa...'\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\nimport '../index.css'\r\n\r\nconst GiftGridItem = ({ title, url}) => {\r\n  return (\r\n    <div className='card animate__animated animate__fadeIn'>\r\n      <img src={ url } alt={ title }/>\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GiftGridItem\r\n","\r\nexport const getGifs = async ( category ) => {\r\n  const apiKey = '0fQjKa8USEXUW3rsU1QJ5Rxv7Pgq3ULT'\r\n  const limit = 10\r\n  \r\n  //encodeURI es para que los espacios de las frases en el link se les ponga _ y en fin, se acomode para aÃ±adirlo a una url\r\n  const url = `https://api.giphy.com/v1/gifs/search?limit=${limit}&api_key=${apiKey}&q=${encodeURI(category)}`\r\n\r\n  const resp = await fetch( url )\r\n  const { data } = await resp.json()\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs\r\n}","import GiftGridItem from './GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\n\r\nconst GiftGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs( category )\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\r\n\r\n      { loading && <p className='animate__animated animate__flash'>Cargando</p>}\r\n\r\n      <div className='card-grid animate__animated animate__fadeIn'>\r\n        {\r\n          images.map( ( img ) => \r\n             <GiftGridItem \r\n              key={ img.id }\r\n              { ...img }\r\n             />\r\n          )\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GiftGrid\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  //Para que el getGifts se ejecute una sola vez al inicio, es necesario el [] al final que son las dependencias\r\n  useEffect(() => {\r\n\r\n    getGifs( category )\r\n      .then(imgs => setState({\r\n        data: imgs,\r\n        loading: false\r\n      }))\r\n\r\n  }, [ category ])//Si la category cambia, se ejecute otra vez el useEffect */\r\n\r\n  return state\r\n\r\n}","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GiftGrid from './components/GifGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['Fantasia'])\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories= { setCategories }/>\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map(category => \r\n            <GiftGrid key={ category } category={ category }/>\r\n          )\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GiftExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}